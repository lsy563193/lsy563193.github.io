@startuml
package "LocalTrajectoryBuilder_Pack" {
  class LocalTrajectoryBuilder {
  //连接本地SLAM堆栈（即姿势外推器，扫描匹配等），无需闭环。
==
    + AddRangeData()
    + AddOdometryData()
    + AddImuData()
===
      - AddAccumulatedRangeData()
      - TransformToGravityAlignedFrameAndFilter()
      - InsertIntoSubmap()
      - ScanMatch()
----
      -active_submaps_
      -motion_filter_
      -extrapolator_
      -num_accumulated_
      -accumulated_range_data_
      -accumulation_started_
      -range_data_collator_
---
      -real_time_correlative_scan_matcher_
      -ceres_scan_matcher_
  }
  
  class LocalSlamResultCallback{

  }

  class PoseExtrapolator {
    //range_data_poses
    用于推断每一个激光点的位姿
  }


  class RangeDataCollator {
    同步来自不同传感器的TimedPointCloudData。
    每个传感器最多缓冲一个消息，
    1 一个传感器的时间是200到300，另一个是150到310.则取150到300
    2 再有一帧数据过来，300到350，则取300到310

    //等到所有测距仪器数据才开始融合，否则返回空；

==
    + AddRangeData()
    //测距传感器的集合
    expected_sensor_ids_ 
    //映射，存放每个测距仪对应的数据
    id_to_pending_data_
    //融合数据开始时间,如果同一id的就使用旧的一帧
    current_start_
    //融合数据结束时间
    current_end_
  }
  class InsertionResult {
    + shared_ptr_Data_ constant_data
    + Submap2D insertion_submaps
  }
  class MatchingResult {
    + Time time
    + Rigid3d local_pose
    + RangeData range_data_in_local
    // 'nullptr' if dropped by the motion filter
    + unique_ptr_InsertionResult insertion_result
  }

  LocalTrajectoryBuilder -down-> PoseExtrapolator
  LocalTrajectoryBuilder -down-> LocalSlamResultCallback
  LocalTrajectoryBuilder -down-> MotionFilter
  LocalTrajectoryBuilder -down-> ActiveSubmaps2D
  LocalTrajectoryBuilder -down-> RangeDataCollator
}
@enduml
